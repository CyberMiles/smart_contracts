var EnLanguage = {
    title: "Description of the bet",
    allowUserBet: "&nbsp;&nbsp;Allow User Bet Amount",
    allowedUserBet: "&nbsp;&nbsp;Allow User Bet Amount",
    betMinAmount: "CMT amount for each bet",
    betMinAmountAtLeast: "At least ",
    option: "Option",
    cancel: "Cancel",
    cancelled: "cancelled",
    error: "Error! Please try again",
    addOption: "Add option",
    delOption: "Del option",
    createContract: "New Bet",
    viewBetList: "View My Bets",
    listTitle: "Title",
    listStatus: "Status",
    listTotalCount: "Total Count",
    listTotalAmount: "Total Amount",
    firstPage: "First Page",
    previousPage: "Previous Page",
    nextPage: "Next Page",
    lastPage: "Last Page",
    backNewContract: "New Bet",
    backIndex: "Back Index",
    btnName: ['Declare', 'Cancel'],
    gameStatus: ['Not Start', 'Progress', 'Pending', 'End'],
    betStatus: ['Not Start', 'In Progress', 'Pending Confirm', 'End'],
    functionArray: ['Stop Betting', 'Declare Winning Option', 'Resume Betting', 'Copy Bet Link', 'Share Bet QR Code'],

    user: {
        errorInfo: "An error has occurred",
    },

    bet: {
        confirm: "Bet ",
        userConfirm: "Confirm my option",
        title: "The bet description",
        gameError: "Error, please refresh",
        betError: "It have an error when get this Bet Game info ：",
        betInfo: "You Bet : ",
        win: "Congratulations to the winner",
        winGet: "You had got",
        failed: "Sorry, you did not win",
        end: "This bet has concluded",
        init: "Initializing : ",
        notStart: "The bet has not started",
        stop: "Stop : ",
        stopped: "The bet has stopped",
        resume: "Resume : ",
        betCreated: 'Created',
        betStop: "Betting Stopped",
        betResumed: "Betting Resumed",
        betSubmit: "Submitted",
        betDeclared: "Winning Option Declared",
        betWithdraw: "Withdraw success",
        declare: "Declare winning for : ",
        betTitle: "Bet CMT Amount",
        showTitle: "This bet game have no set choice and title",
        showChoice: "No choices yet",
        back: "Bet ",
        setting: "Owner admin options",
        betGameInfo: "WeBet on CMT",
        alreadyBetted: "Your bet was recorded. Claim your winnings after the betting ends",
        pendingBet: "Your bet has been submitted to the CyberMiles public blockchain",
        pendingWithdraw: "Your withdraw request has been submitted",
        ended: "The betting has concluded. Check below to see if you win",
        cancelled: "Cancelled. You can withdraw your bet",
    },

    detail: {
        detailInfo: "Details",
        playCount: "Players count",
        totalAmount: "Total bet amount",
        contractBetAddress: "Bet contract address",
        myBetAmount: "My bet amount",
        betDesc: "Winner will get paid after the betting concludes",
        qrBet: "Use CMT Wallet and scan QR code to bet",
    },

    withdraw: {
        info: "You withdraw : ",
        btnName: "Withdraw your winnings",
    },

    index: {
        newBet: "New Bet",
        from: "from ",
        participants: " participants",
        participate: "Participate",
        backNewBetContract: "New Bet",
    },

    wallet: {
        cmtWallet: "Please install CMT Wallet",
        metaMask: "Please install MetaMask for CMT",
    },

    my: {
        backBetList: "List of bets",
    },

    tip: {
        loading: "Loading ...",
        processing: "Processing...",
        nullTitle: "Title can not be empty",
        lessThan: "You need at least 2 options",
        firstPage: "This is the First Page",
        lastPage: "This is the Last Page",
        exceedTitle: "Title is too long ",
        exceedOption: "Option is too long",
        createFailed: "Failed to create contract",
        getBetInfoError: "The Game you Get: ",
        selectOption: "Please select a winning option",
        copied: "Link Copied！",
        selectChoice: "Please make your choice",
        positive: "Please enter a positive integer",
        moreThanZero: "The amount should be more than zero",
        moreThan: "The amount should be more than ",
        fillRightAmount: "Please enter the right amount",
        submit: "Submit",
    }
}


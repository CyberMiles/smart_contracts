{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526000600760146101000a81548160ff02191690831515021790555034801561002b57600080fd5b5060405160e08062001eae83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050808787858888876000831115156100a157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156100dd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561011957600080fd5b8260028190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000811115156101b357600080fd5b80600481905550504282101515156101ca57600080fd5b8181101515156101d957600080fd5b8160058190555080600681905550505033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008111151561023957600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1661026461031a565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156102b6573d6000803e3d6000fd5b50600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806008819055505082811115151561030e57600080fd5b5050505050505061032b565b604051610bdf80620012cf83390190565b610f94806200033b6000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101125780632c4e722e14610141578063355274ea1461016c57806340193883146101975780634042b66f146101c25780634b6753bc146101ed5780634bb278f3146102185780634f9359451461022f578063521eb2731461025e578063715018a6146102b55780637d3d6522146102cc5780638d4e4083146102fb5780638da5cb5b1461032a578063b5545a3c14610381578063b7a8807c14610398578063ec8ac4d8146103c3578063f2fde38b146103f9578063fbfa77cf1461043c578063fc0c546a14610493575b610110336104ea565b005b34801561011e57600080fd5b506101276105b8565b604051808215151515815260200191505060405180910390f35b34801561014d57600080fd5b506101566105c4565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816105ca565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6105d0565b6040518082815260200191505060405180910390f35b3480156101ce57600080fd5b506101d76105d6565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102026105dc565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061022d6105e2565b005b34801561023b57600080fd5b506102446106be565b604051808215151515815260200191505060405180910390f35b34801561026a57600080fd5b506102736106cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca6106f3565b005b3480156102d857600080fd5b506102e16107f8565b604051808215151515815260200191505060405180910390f35b34801561030757600080fd5b50610310610807565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f61081a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038d57600080fd5b50610396610840565b005b3480156103a457600080fd5b506103ad610946565b6040518082815260200191505060405180910390f35b6103f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b005b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b005b34801561044857600080fd5b50610451610aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049f57600080fd5b506104a8610aca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104fa8383610aef565b61050382610b1c565b905061051a82600354610b3a90919063ffffffff16565b60038190555061052a8382610b56565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36105a18383610b64565b6105a9610b68565b6105b38383610c40565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063e57600080fd5b600760149054906101000a900460ff1615151561065a57600080fd5b6106626105b8565b151561066d57600080fd5b610675610c44565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561074f57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561085b57600080fd5b6108636107f8565b15151561086f57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109a857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109e457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005544210158015610b0357506006544211155b1515610b0e57600080fd5b610b188282610d9d565b5050565b6000610b3360025483610dd090919063ffffffff16565b9050919050565b60008183019050828110151515610b4d57fe5b80905092915050565b610b608282610e08565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c2557600080fd5b505af1158015610c39573d6000803e3d6000fd5b5050505050565b5050565b610c4c6107f8565b15610cf457600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cd757600080fd5b505af1158015610ceb573d6000803e3d6000fd5b50505050610d93565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b505050505b610d9b610f16565b565b610da78282610f18565b600454610dbf82600354610b3a90919063ffffffff16565b11151515610dcc57600080fd5b5050565b600080831415610de35760009050610e02565b8183029050818382811515610df457fe5b04141515610dfe57fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ecc57600080fd5b505af1158015610ee0573d6000803e3d6000fd5b505050506040513d6020811015610ef657600080fd5b81019080805190602001909291905050501515610f1257600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f5457600080fd5b60008114151515610f6457600080fd5b50505600a165627a7a72305820e9879a6d1eed524d45fca497a69407a573297603e17cd5baadefca5c6c50a2170029608060405234801561001057600080fd5b50604051602080610bdf83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156100af57600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260146101000a81548160ff0219169083600281111561010f57fe5b021790555050610abb806101246000396000f3006080604052600436106100a4576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806343d726d6146100a9578063521eb273146100c0578063715018a6146101175780638c52dc411461012e5780638da5cb5b14610145578063c19d93fb1461019c578063cb13cddb146101d5578063f2fde38b1461022c578063f340fa011461026f578063fa89401a146102a5575b600080fd5b3480156100b557600080fd5b506100be6102e8565b005b3480156100cc57600080fd5b506100d5610448565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012357600080fd5b5061012c61046e565b005b34801561013a57600080fd5b50610143610570565b005b34801561015157600080fd5b5061015a610651565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101b1610676565b604051808260028111156101c157fe5b60ff16815260200191505060405180910390f35b3480156101e157600080fd5b50610216600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610689565b6040518082815260200191505060405180910390f35b34801561023857600080fd5b5061026d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a1565b005b6102a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107f6565b005b3480156102b157600080fd5b506102e6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061091d565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561034357600080fd5b6000600281111561035057fe5b600260149054906101000a900460ff16600281111561036b57fe5b14151561037757600080fd5b60028060146101000a81548160ff0219169083600281111561039557fe5b02179055507f1cdde67b72a90f19919ac732a437ac2f7a10fc128d28c2a6e525d89ce5cd9d3a60405160405180910390a1600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610445573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104c957600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105cb57600080fd5b600060028111156105d857fe5b600260149054906101000a900460ff1660028111156105f357fe5b1415156105ff57600080fd5b6001600260146101000a81548160ff0219169083600281111561061e57fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260149054906101000a900460ff1681565b60016020528060005260406000206000915090505481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106fc57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561073857600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085157600080fd5b6000600281111561085e57fe5b600260149054906101000a900460ff16600281111561087957fe5b14151561088557600080fd5b6108d734600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a7390919063ffffffff16565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60006001600281111561092c57fe5b600260149054906101000a900460ff16600281111561094757fe5b14151561095357600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610a20573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651826040518082815260200191505060405180910390a25050565b60008183019050828110151515610a8657fe5b809050929150505600a165627a7a72305820fc7e336aa05eba5d8153f29d7d3d838c8aedbf009c29c85c666ad07ee661c38a0029",
  "deployedBytecode": "0x608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101125780632c4e722e14610141578063355274ea1461016c57806340193883146101975780634042b66f146101c25780634b6753bc146101ed5780634bb278f3146102185780634f9359451461022f578063521eb2731461025e578063715018a6146102b55780637d3d6522146102cc5780638d4e4083146102fb5780638da5cb5b1461032a578063b5545a3c14610381578063b7a8807c14610398578063ec8ac4d8146103c3578063f2fde38b146103f9578063fbfa77cf1461043c578063fc0c546a14610493575b610110336104ea565b005b34801561011e57600080fd5b506101276105b8565b604051808215151515815260200191505060405180910390f35b34801561014d57600080fd5b506101566105c4565b6040518082815260200191505060405180910390f35b34801561017857600080fd5b506101816105ca565b6040518082815260200191505060405180910390f35b3480156101a357600080fd5b506101ac6105d0565b6040518082815260200191505060405180910390f35b3480156101ce57600080fd5b506101d76105d6565b6040518082815260200191505060405180910390f35b3480156101f957600080fd5b506102026105dc565b6040518082815260200191505060405180910390f35b34801561022457600080fd5b5061022d6105e2565b005b34801561023b57600080fd5b506102446106be565b604051808215151515815260200191505060405180910390f35b34801561026a57600080fd5b506102736106cd565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c157600080fd5b506102ca6106f3565b005b3480156102d857600080fd5b506102e16107f8565b604051808215151515815260200191505060405180910390f35b34801561030757600080fd5b50610310610807565b604051808215151515815260200191505060405180910390f35b34801561033657600080fd5b5061033f61081a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561038d57600080fd5b50610396610840565b005b3480156103a457600080fd5b506103ad610946565b6040518082815260200191505060405180910390f35b6103f7600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104ea565b005b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061094c565b005b34801561044857600080fd5b50610451610aa4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561049f57600080fd5b506104a8610aca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104fa8383610aef565b61050382610b1c565b905061051a82600354610b3a90919063ffffffff16565b60038190555061052a8382610b56565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a36105a18383610b64565b6105a9610b68565b6105b38383610c40565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561063e57600080fd5b600760149054906101000a900460ff1615151561065a57600080fd5b6106626105b8565b151561066d57600080fd5b610675610c44565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561074f57600080fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561085b57600080fd5b6108636107f8565b15151561086f57600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561092c57600080fd5b505af1158015610940573d6000803e3d6000fd5b50505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109a857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156109e457600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6005544210158015610b0357506006544211155b1515610b0e57600080fd5b610b188282610d9d565b5050565b6000610b3360025483610dd090919063ffffffff16565b9050919050565b60008183019050828110151515610b4d57fe5b80905092915050565b610b608282610e08565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015610c2557600080fd5b505af1158015610c39573d6000803e3d6000fd5b5050505050565b5050565b610c4c6107f8565b15610cf457600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610cd757600080fd5b505af1158015610ceb573d6000803e3d6000fd5b50505050610d93565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b505050505b610d9b610f16565b565b610da78282610f18565b600454610dbf82600354610b3a90919063ffffffff16565b11151515610dcc57600080fd5b5050565b600080831415610de35760009050610e02565b8183029050818382811515610df457fe5b04141515610dfe57fe5b8090505b92915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610ecc57600080fd5b505af1158015610ee0573d6000803e3d6000fd5b505050506040513d6020811015610ef657600080fd5b81019080805190602001909291905050501515610f1257600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f5457600080fd5b60008114151515610f6457600080fd5b50505600a165627a7a72305820e9879a6d1eed524d45fca497a69407a573297603e17cd5baadefca5c6c50a2170029",
  "sourceMap": "1394:589:38:-;;;384:5:27;358:31;;;;;;;;;;;;;;;;;;;;1481:500:38;8:9:-1;5:2;;;30:1;27;20:12;5:2;1481:500:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1798:5;1746:12;1760;1721:4;1677:5;1684:7;1693:6;1723:1:26;1715:5;:9;1707:18;;;;;;;;1758:1;1739:21;;:7;:21;;;;1731:30;;;;;;;;1793:1;1775:20;;:6;:20;;;;1767:29;;;;;;;;1810:5;1803:4;:12;;;;1830:7;1821:6;;:16;;;;;;;;;;;;;;;;;;1851:6;1843:5;;:14;;;;;;;;;;;;;;;;;;1636:226;;;472:1:34;465:4;:8;457:17;;;;;;;;486:4;480:3;:10;;;;418:77;886:15:36;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;575:10:94;567:5;;:18;;;;;;;;;;;;;;;;;;753:1:29;745:5;:9;737:18;;;;;;;;785:6;;;;;;;;;;;769:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;769:23:29;761:5;;:31;;;;;;;;;;;;;;;;;;805:5;798:4;:12;;;;697:118;1971:4:38;1962:5;:13;;1954:22;;;;;;;;1481:500;;;;;;;1394:589;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1394:589:38:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2092:21:26;2102:10;2092:9;:21::i;:::-;1394:589:38;1169:153:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:36;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:19:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1005:19:26;;;;;;;;;;;;;;;;;;;;;;;252:18:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:18:34;;;;;;;;;;;;;;;;;;;;;;;493:19:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;493:19:29;;;;;;;;;;;;;;;;;;;;;;;1055:24:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1055:24:26;;;;;;;;;;;;;;;;;;;;;;;292:26:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:36;;;;;;;;;;;;;;;;;;;;;;;560:163:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:27;;;;;;603:83:34;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:83:34;;;;;;;;;;;;;;;;;;;;;;;;;;;932:21:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;932:21:26;;;;;;;;;;;;;;;;;;;;;;;;;;;1162:111:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1162:111:94;;;;;;1137:85:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1137:85:29;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:27;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:94;;;;;;;;;;;;;;;;;;;;;;;;;;;903:121:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;903:121:29;;;;;;262:26:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:36;;;;;;;;;;;;;;;;;;;;;;;2254:577:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:174:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;898:174:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:24:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:24:29;;;;;;;;;;;;;;;;;;;;;;;;;;;870:18:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:18:26;;;;;;;;;;;;;;;;;;;;;;;;;;;2254:577;2317:17;2448:14;2337:9;2317:29;;2352:45;2373:12;2387:9;2352:20;:45::i;:::-;2465:26;2481:9;2465:15;:26::i;:::-;2448:43;;2530:24;2544:9;2530;;:13;;:24;;;;:::i;:::-;2518:9;:36;;;;2561:38;2578:12;2592:6;2561:16;:38::i;:::-;2649:12;2610:88;;2631:10;2610:88;;;2669:9;2686:6;2610:88;;;;;;;;;;;;;;;;;;;;;;;;2705:47;2728:12;2742:9;2705:22;:47::i;:::-;2759:15;:13;:15::i;:::-;2780:46;2802:12;2816:9;2780:21;:46::i;:::-;2254:577;;;:::o;1169:153:36:-;1211:4;1306:11;;1288:15;:29;1281:36;;1169:153;:::o;1005:19:26:-;;;;:::o;252:18:34:-;;;;:::o;493:19:29:-;;;;:::o;1055:24:26:-;;;;:::o;292:26:36:-;;;;:::o;560:163:27:-;719:5:94;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:27;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;603:83:34:-;646:4;678:3;;665:9;;:16;;658:23;;603:83;:::o;932:21:26:-;;;;;;;;;;;;;:::o;1162:111:94:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1238:5;;;;;;;;;;;1219:25;;;;;;;;;;;;1266:1;1250:5;;:18;;;;;;;;;;;;;;;;;;1162:111::o;1137:85:29:-;1181:4;1213;;1200:9;;:17;;1193:24;;1137:85;:::o;358:31:27:-;;;;;;;;;;;;;:::o;238:20:94:-;;;;;;;;;;;;;:::o;903:121:29:-;947:11;;;;;;;;;;;939:20;;;;;;;;974:13;:11;:13::i;:::-;973:14;965:23;;;;;;;;995:5;;;;;;;;;;;:12;;;1008:10;995:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:24:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;995:24:29;;;;903:121::o;262:26:36:-;;;;:::o;898:174:94:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;994:1;974:22;;:8;:22;;;;966:31;;;;;;;;1036:8;1008:37;;1029:5;;;;;;;;;;;1008:37;;;;;;;;;;;;1059:8;1051:5;;:16;;;;;;;;;;;;;;;;;;898:174;:::o;581:24:29:-;;;;;;;;;;;;;:::o;870:18:26:-;;;;;;;;;;;;;:::o;1504:180:36:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;1627:26;:52::i;:::-;1504:180;;:::o;5268:121:26:-;5340:7;5364:20;5379:4;;5364:10;:14;;:20;;;;:::i;:::-;5357:27;;5268:121;;;:::o;1008:123:45:-;1066:9;1091:1;1087;:5;1083:9;;1110:1;1105;:6;;1098:14;;;;;;1125:1;1118:8;;1008:123;;;;:::o;4496:150:26:-;4599:42;4614:12;4628;4599:14;:42::i;:::-;4496:150;;:::o;4899:131::-;;;:::o;1554:87:29:-;1594:5;;;;;;;;;;;:13;;;1614:9;1625:10;1594:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1594:42:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1594:42:29;;;;;1554:87::o;3708:130:26:-;;;:::o;1308:159:29:-;1351:13;:11;:13::i;:::-;1347:89;;;1374:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1374:13:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1374:13:29;;;;1347:89;;;1408:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:21:29;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1408:21:29;;;;1347:89;1442:20;:18;:20::i;:::-;1308:159::o;872:209:34:-;977:52;1004:12;1018:10;977:26;:52::i;:::-;1072:3;;1043:25;1057:10;1043:9;;:13;;:25;;;;:::i;:::-;:32;;1035:41;;;;;;;;872:209;;:::o;203:167:45:-;261:9;287:1;282;:6;278:35;;;305:1;298:8;;;;278:35;326:1;322;:5;318:9;;349:1;344;340;:5;;;;;;;;:10;333:18;;;;;;364:1;357:8;;203:167;;;;;:::o;503:168:32:-;626:5;;;;;;;;;;;612:25;;;638:12;652;612:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:53:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;612:53:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;612:53:32;;;;;;;;;;;;;;;;604:62;;;;;;;;503:168;;:::o;919:38:27:-;:::o;3255:175:26:-;3392:1;3368:26;;:12;:26;;;;3360:35;;;;;;;;3423:1;3409:10;:15;;3401:24;;;;;;;;3255:175;;:::o",
  "source": "pragma solidity ^0.4.23;\n\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../token/ERC20/MintableToken.sol\";\n\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is MintableToken {\n\n  // solium-disable-next-line uppercase\n  string public constant name = \"Sample Crowdsale Token\";\n  string public constant symbol = \"SCT\"; // solium-disable-line uppercase\n  uint8 public constant decimals = 18; // solium-disable-line uppercase\n\n}\n\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\n// XXX There doesn't seem to be a way to split this line that keeps solium\n// happy. See:\n// https://github.com/duaraghav8/Solium/issues/205\n// --elopio - 2018-05-10\n// solium-disable-next-line max-len\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\n\n  constructor(\n    uint256 _openingTime,\n    uint256 _closingTime,\n    uint256 _rate,\n    address _wallet,\n    uint256 _cap,\n    MintableToken _token,\n    uint256 _goal\n  )\n    public\n    Crowdsale(_rate, _wallet, _token)\n    CappedCrowdsale(_cap)\n    TimedCrowdsale(_openingTime, _closingTime)\n    RefundableCrowdsale(_goal)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n}\n",
  "sourcePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3978
      ],
      "SampleCrowdsaleToken": [
        3932
      ]
    },
    "id": 3979,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3916,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:38"
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3917,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3580,
        "src": "26:53:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3918,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3166,
        "src": "80:59:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3919,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3419,
        "src": "140:51:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 3920,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 7756,
        "src": "192:42:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3921,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7755,
              "src": "412:13:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$7755",
                "typeString": "contract MintableToken"
              }
            },
            "id": 3922,
            "nodeType": "InheritanceSpecifier",
            "src": "412:13:38"
          }
        ],
        "contractDependencies": [
          6663,
          7416,
          7617,
          7649,
          7755,
          8264
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 3932,
        "linearizedBaseContracts": [
          3932,
          7755,
          6663,
          8264,
          7416,
          7617,
          7649
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3925,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "471:54:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3923,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "471:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 3924,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:24:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3928,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "529:37:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3926,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "529:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 3927,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "561:5:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3931,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "603:35:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3929,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "603:5:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 3930,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "636:2:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 3979,
        "src": "379:296:38"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3933,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3579,
              "src": "1422:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$3579",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3934,
            "nodeType": "InheritanceSpecifier",
            "src": "1422:15:38"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3935,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3165,
              "src": "1439:19:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$3165",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3936,
            "nodeType": "InheritanceSpecifier",
            "src": "1439:19:38"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3937,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3418,
              "src": "1460:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$3418",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3938,
            "nodeType": "InheritanceSpecifier",
            "src": "1460:15:38"
          }
        ],
        "contractDependencies": [
          2939,
          2987,
          3165,
          3418,
          3579,
          3813,
          6663
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 3978,
        "linearizedBaseContracts": [
          3978,
          3418,
          3165,
          2987,
          6663,
          3813,
          3579,
          2939
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3976,
              "nodeType": "Block",
              "src": "1807:174:38",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3971,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3952,
                          "src": "1962:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3972,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "1971:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1962:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10048,
                        10049
                      ],
                      "referencedDeclaration": 10048,
                      "src": "1954:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:22:38"
                }
              ]
            },
            "documentation": null,
            "id": 3977,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3955,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3944,
                    "src": "1677:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3956,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3946,
                    "src": "1684:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3957,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3950,
                    "src": "1693:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$7755",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 3958,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3954,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2939,
                  "src": "1667:9:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2939_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1667:33:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3960,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3948,
                    "src": "1721:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3961,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3959,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3579,
                  "src": "1705:15:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$3579_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:21:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3963,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3940,
                    "src": "1746:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3964,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3942,
                    "src": "1760:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3962,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3813,
                  "src": "1731:14:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$3813_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1731:42:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3967,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3952,
                    "src": "1798:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3968,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3966,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3165,
                  "src": "1778:19:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$3165_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:26:38"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1498:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3942,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1524:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3944,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1550:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3946,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1569:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3948,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1590:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3950,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1608:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$7755",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3949,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7755,
                    "src": "1608:13:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$7755",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3952,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1634:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1492:159:38"
            },
            "payable": false,
            "returnParameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:0:38"
            },
            "scope": 3978,
            "src": "1481:500:38",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3979,
        "src": "1394:589:38"
      }
    ],
    "src": "0:1984:38"
  },
  "legacyAST": {
    "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        3978
      ],
      "SampleCrowdsaleToken": [
        3932
      ]
    },
    "id": 3979,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3916,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".23"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:38"
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 3917,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3580,
        "src": "26:53:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3918,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3166,
        "src": "80:59:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 3919,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 3419,
        "src": "140:51:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/tokenDemo2/contracts/zeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 3920,
        "nodeType": "ImportDirective",
        "scope": 3979,
        "sourceUnit": 7756,
        "src": "192:42:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3921,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7755,
              "src": "412:13:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$7755",
                "typeString": "contract MintableToken"
              }
            },
            "id": 3922,
            "nodeType": "InheritanceSpecifier",
            "src": "412:13:38"
          }
        ],
        "contractDependencies": [
          6663,
          7416,
          7617,
          7649,
          7755,
          8264
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 3932,
        "linearizedBaseContracts": [
          3932,
          7755,
          6663,
          8264,
          7416,
          7617,
          7649
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 3925,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "471:54:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3923,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "471:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 3924,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "501:24:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3928,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "529:37:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 3926,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "529:6:38",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 3927,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "561:5:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 3931,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 3932,
            "src": "603:35:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 3929,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "603:5:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 3930,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "636:2:38",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 3979,
        "src": "379:296:38"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3933,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3579,
              "src": "1422:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$3579",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 3934,
            "nodeType": "InheritanceSpecifier",
            "src": "1422:15:38"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3935,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3165,
              "src": "1439:19:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$3165",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 3936,
            "nodeType": "InheritanceSpecifier",
            "src": "1439:19:38"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3937,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3418,
              "src": "1460:15:38",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$3418",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 3938,
            "nodeType": "InheritanceSpecifier",
            "src": "1460:15:38"
          }
        ],
        "contractDependencies": [
          2939,
          2987,
          3165,
          3418,
          3579,
          3813,
          6663
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 3978,
        "linearizedBaseContracts": [
          3978,
          3418,
          3165,
          2987,
          6663,
          3813,
          3579,
          2939
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3976,
              "nodeType": "Block",
              "src": "1807:174:38",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3971,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3952,
                          "src": "1962:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3972,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3948,
                          "src": "1971:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1962:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10048,
                        10049
                      ],
                      "referencedDeclaration": 10048,
                      "src": "1954:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1954:22:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3975,
                  "nodeType": "ExpressionStatement",
                  "src": "1954:22:38"
                }
              ]
            },
            "documentation": null,
            "id": 3977,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3955,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3944,
                    "src": "1677:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3956,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3946,
                    "src": "1684:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3957,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3950,
                    "src": "1693:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$7755",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 3958,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3954,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2939,
                  "src": "1667:9:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$2939_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1667:33:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3960,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3948,
                    "src": "1721:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3961,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3959,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3579,
                  "src": "1705:15:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$3579_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1705:21:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3963,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3940,
                    "src": "1746:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 3964,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3942,
                    "src": "1760:12:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3962,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3813,
                  "src": "1731:14:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$3813_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1731:42:38"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3967,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3952,
                    "src": "1798:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3968,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3966,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3165,
                  "src": "1778:19:38",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$3165_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:26:38"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3940,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1498:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3942,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1524:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1524:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3944,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1550:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1550:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3946,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1569:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1569:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3948,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1590:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1590:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3950,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1608:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$7755",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3949,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7755,
                    "src": "1608:13:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$7755",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3952,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 3977,
                  "src": "1634:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1492:159:38"
            },
            "payable": false,
            "returnParameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1807:0:38"
            },
            "scope": 3978,
            "src": "1481:500:38",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3979,
        "src": "1394:589:38"
      }
    ],
    "src": "0:1984:38"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-04T18:46:36.319Z"
}